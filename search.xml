<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[基于 Hexo + GitHub Pages 搭建个人博客（一）]]></title>
    <url>%2F2018%2F03%2F21%2F%E5%9F%BA%E4%BA%8E-Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[前言：我的博客写作之路 15 年刚上大学，第一次接触公众号，就萌生了创建一个公众号写点东西，但最终不了了之。 很快到了 16 年，开始接触网上各大博客网站，接触最多的当属 CSDN，萌生了注册一个博客，写一点自己在学习上遇到的问题，分享一些自己的解决办法，但最终还是不了了之。 16 年暑假，自媒体横行在全国各地，自己眼里似乎看到很多机会有似乎异常模糊。一个偶然的机会让我意识到必须开始弄个博客写点东西了，当时的想法是，先注册个头条号，16年下半年开学再弄博客写东西，这种事情不着急，时间一天天过，但这两件事最终都没做，不了了之。 时间一分一秒地到了17年，上半年这种注册博客，写博客的心态依然萦绕耳边，但并没有什么实际行动。 终于到了17年6月份左右，去了一个地方回来后，我手忙脚乱，立刻在网上的平台注册了一个博客，而后开始写自己学习上的东西。而后有急忙地注册了一个微信公众号，第一次开始使用键盘记录自己的学生和生活，而我拖延了2年半的博客与写作之路，也就从此开始。 网上的某博客平台广告很多，开始时我无从适应，不知道如何排版，加之打字速度与龟速相差不大，夸张点说就是，写一篇几百字的文章要一两个小时，开不知道自己写了什么东西，但也第一次知道了写作的收获如此之大，具体可以说上个三天三夜，这里略。 慢慢地开始有了搭建一个属于自己的个人博客，于是急功近利，浅藏辄止各种编程语言，最终无功而返，一事无成。 带着那门基础不扎实的 Java 语言，开始学习框架，搭建博客，尽管各种异常报错，乱码问题，还有点想放弃，却又不甘，因此目前也还在学习。 慢慢开始了 WordPress ，cnblogs ，简书，掘金等五花八门的信息筛选之中，最终还是选择了搭建一个 Hexo + GitHub Pages 的博客框架。 基于 Hexo + GitHub Page 搭建个人博客一、搭建前准备1、安装 Git：Git 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 （1）下载 Git：官网下载地址 （各大系统版本都有 Git，这里以 Windows 版本为例） （2）双击下载的 Git 安装包开始安装 （3）一直点 Next，继续安装 ​ ​ ​（4）点击 Install ，完成安装​ ​（5）打开 cmd 命令窗口，执行以下命令，结果显示 Git 版本，安装成功 1git --version ​（6）、推荐两个学习 Git 的网站： 官方文档：点击这里前往 廖雪峰网站教程：点击这里前往 2、安装 Node.js：是一个基于 Chrome V8 引擎的 JavaScript 运行环境，轻量高效，Node.js 的包管理器 npm 是全球最大的开源库生态系统。 （1）下载 Node.js：官网下载地址 （各大系统版本都有，这里以 Windows 为例） （2）双击下载的 Node.js 安装包开始安装 （3）一直点 Next ，选择安装路径，继续安装​ ​（4）点击 Install ，完成安装​ ​（5）打开 cmd 命令窗口，执行以下命令，显示 Node.js 版本，安装成功 1node -v 二、搭建 Hexo 博客1、安装 Hexo，在电脑中新建一个 compassblog 文件夹存放自己的博客，在文件夹内右键点击 Git Bash 进入命令窗口，执行以下代码： 1npm install -g hexo-cli 结果如下图：​ 2、初始化 Hexo，得到 hexo 文件夹，用于存放 Hexo 博客所有的文件，包括下面会讲到的主题文件，Git Bash 窗口执行以下代码：（无特别提示，以下代码基本都在 Git Bash 命令窗口执行） 1hexo init hexo 结果如下图：​ 3、配置 Hexo，进入 hexo 文件夹安装依赖，部署形成的文件，分别执行以下代码： 123cd hexonpm installhexo generate 结果如下图：​ 4、启动服务器：执行以下代码，可以看到服务器代码是 4000 1hexo server 结果如下图：按 Ctrl + C 可以停止服务器 5、打开浏览器，地址栏输入http://localhost:4000/ ，结果如下图，可以看到，初始化的 Hexo 博客搭建成功，可以访问 三、将初始化的 Hexo 博客部署到 GitHub Pages1、注册一个 Github 帐号，新建一个仓库，仓库名为：compassblog.github.io ，如下图所示：（由于我的仓库已经创建，所以会显示仓库已经存在，并且这个仓库的名称必须严格按照 username.github.io 的格式来命名） 2、进入已经建好的仓库，点击 settings ，找到 GitHub Pages 选项，点击 Choose a theme 选择一个主题，然后点击 select theme 选择主题，如下图所示：（到这一步其实已经可以在地址栏访问自己选择的主题了，选择主题这一步其实可以忽略，但我觉得 GitHub 提供的主题还是蛮酷的，所以就附上这一步吧） 3、配置 Git 个人信息：在 compassblog 目录打开一个 Git Bash 窗口，输入下面的命令 12git config --global user.name &quot; GitHub 用户名 &quot;git config --global user.email &quot; GitHub 邮箱 &quot; 如我的是如下图这样输入： 4、生成 SSH KEY，其实就是生成一个公钥和密钥，因为 GitHub 需要一个密钥才能与本地相连接。执行以下命令，并连续按 3 次回车生成密钥： 1ssh-keygen -t rsa -C &quot; 邮箱地址 &quot; 我电脑是如下图这样： 5、SSH KEY 生成之后会默认保存在 C:/Users/电脑名用户名/.ssh 目录中，打开这个目录，打开 id_rsa.pub 文件，复制全部内容，即复制密钥。 6、打开 GitHub ，依次点击 头像–&gt;Settings–&gt;SSH and GPG keys–&gt;New SSH key，将复制的密钥粘贴到 key 输入框，最后点击 Add Key ，SSH KEY 配置成功，如下图所示： 7、修改 hexo 文件夹下的 _config.yml 全局配置文件，修改 deploy 属性代码，将本地 hexo 项目托管到 GitHub 上，如下图所示： 12345deploy: type: git #部署的类型 repository: git@github.com:compassblog/compassblog.github.io.git # 仓库地址 branch: master #分支名称 message: hexo deploy #提交信息 8、执行下面的命令，安装 hexo-deployer-git 插件，快速把代码托管到 GitHub 上 1npm install hexo-deployer-git --sava 结果如图所示： 9、执行下面的代码命令，将 hexo 项目托管到 GitHub 上 1hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy 注：hexo generate 可缩写为 hexo g ， hexo deploy 可缩写为 hexo d 结果如图所示： 10、浏览器地址栏输入 https://username.github.io/ 访问，可以看到博客已经部署到 GitHub 上，正常访问，如下图所示： 最后写几句我本来想一次把这个基于 Hexo + GitHub Pages 搭建个人博客流程发布在一篇文章上面发布出来的，但实在是太长了，很难一篇文章写完。关于博客如何更换主题，如何进行个性更换，具体的配置等等很多的配置，后面找时间再持续的发布出来，欢迎关注，Thanks 。]]></content>
      <categories>
        <category>Hexo</category>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <url>%2F2018%2F03%2F20%2FHello-Hexo%2F</url>
    <content type="text"><![CDATA[Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。 1Hexo：快速、简洁且高效的博客框架 Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染 Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站 1Hexo 拥有强大的插件系统，安装插件可以让 Hxo 支持 Jade, CoffeeScript 点击前往我的GitHub点击前往我的CSND点击前往我的cnblogs点击前往我的掘金点击前往我的简书点击前往我的知乎]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
